<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>openapi-generator-for-spring-starter</artifactId>
    <name>OpenAPI Generator for Spring Boot :: Starter</name>

    <parent>
        <artifactId>openapi-generator-for-spring-parent</artifactId>
        <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
        <version>6.0.0</version>
    </parent>

    <properties>
        <sonar.skip>true</sonar.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
            <artifactId>openapi-generator-for-spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
            <artifactId>openapi-generator-for-spring-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
            <artifactId>openapi-generator-for-spring-ui</artifactId>
        </dependency>
        <!-- By default, offer YAML support. Library users can exclude this dependency if desired -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
    </dependencies>


    <profiles>
        <profile>
            <id>deploy</id>
            <activation>
                <property>
                    <name>deploy</name>
                </property>
            </activation>
            <properties>
                <maven.javadoc.skip>true</maven.javadoc.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <!--
                        As SonaType requires a -javadoc.jar to be present for deployment,
                        we fake an empty one here.
                        See: https://vzurczak.wordpress.com/2014/08/01/generate-an-empty-javadoc-jar-file/
                        -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>empty-javadoc-jar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <classifier>javadoc</classifier>
                                    <classesDirectory>${basedir}/javadoc</classesDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
