<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.6</version>
    </parent>

    <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
    <artifactId>openapi-generator-for-spring-parent</artifactId>
    <name>OpenAPI Generator for Spring Boot</name>
    <version>5.1.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <description>
        This library automagically generates a OpenApi v3 specification at runtime
        for Spring Boot applications
    </description>
    <url>https://github.com/qaware/openapi-generator-for-spring</url>

    <inceptionYear>2020</inceptionYear>

    <organization>
        <name>QAware GmbH</name>
        <url>https://www.qaware.de</url>
    </organization>

    <licenses>
        <license>
            <name>Apache License v2</name>
            <url>https://opensource.org/licenses/Apache-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/qaware/openapi-generator-for-spring/issues</url>
    </issueManagement>

    <developers>
        <developer>
            <id>neiser</id>
            <url>https://github.com/neiser</url>
            <name>Andreas Grub</name>
            <email>andreas.grub@qaware.de</email>
            <organization>QAware GmbH</organization>
            <organizationUrl>https://www.qaware.de</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/qaware/openapi-generator-for-spring.git</connection>
        <developerConnection>scm:git:https://github.com/qaware/openapi-generator-for-spring.git</developerConnection>
        <url>https://github.com/qaware/openapi-generator-for-spring</url>
        <tag>master</tag>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <sonar.projectKey>qaware_openapi-generator-for-spring</sonar.projectKey>
        <sonar.organization>qaware-github</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <!-- Point the Sonar Qube Plugin always to the same aggregated JaCoCo report -->
        <sonar.coverage.jacoco.xmlReportPaths>
            ${project.basedir}/../openapi-generator-for-spring-test/target/site/jacoco-aggregate/jacoco.xml,
            <!-- the next extra directory is not strictly necessary, but suppresses a warning when running on the reactor pom -->
            ${project.basedir}/openapi-generator-for-spring-test/target/site/jacoco-aggregate/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>

        <lombok.version>1.18.22</lombok.version>
        <jsr305.version>3.0.2</jsr305.version>
        <swagger-annotations.version>2.1.11</swagger-annotations.version>
        <webjars.swaggerui.version>3.52.5</webjars.swaggerui.version>
        <classgraph.version>4.8.132</classgraph.version>
        <commons.io.version>2.11.0</commons.io.version>
    </properties>

    <modules>
        <module>openapi-generator-for-spring-common</module>
        <module>openapi-generator-for-spring-shaded</module>
        <module>openapi-generator-for-spring-web</module>
        <module>openapi-generator-for-spring-webmvc</module>
        <module>openapi-generator-for-spring-webflux</module>
        <module>openapi-generator-for-spring-autoconfigure</module>
        <module>openapi-generator-for-spring-model</module>
        <module>openapi-generator-for-spring-api</module>
        <module>openapi-generator-for-spring-ui</module>
        <module>openapi-generator-for-spring-starter</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-model</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-common</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-shaded</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-web</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-autoconfigure</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-webmvc</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-webflux</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-ui</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>de.qaware.tools.openapi-generator-for-spring</groupId>
                <artifactId>openapi-generator-for-spring-starter</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>swagger-ui</artifactId>
                <version>${webjars.swaggerui.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.classgraph</groupId>
                <artifactId>classgraph</artifactId>
                <version>${classgraph.version}</version>
            </dependency>

            <!-- Test dependencies -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${jsr305.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.7</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.0.0</version>
                    <configuration>
                        <licenseName>apache_v2</licenseName>
                        <organizationName>QAware GmbH</organizationName>
                        <inceptionYear>2020</inceptionYear>
                        <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                        <emptyLineAfterHeader>true</emptyLineAfterHeader>
                        <roots>
                            <root>src/main/java</root>
                        </roots>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.8</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>update-license-header</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Disable pushing in the release plugin -->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <pushChanges>false</pushChanges>
                    <releaseProfiles>deploy</releaseProfiles>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>no-deploy</id>
            <!--
            According to https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin
            skipNexusStagingDeployMojo may not be set to true in the last reactor module. Because we don't
            want to deploy our last module, nor a dummy module, we simply omit the relevant modules when
            a deploy is in progress.
            -->
            <activation>
                <property>
                    <name>!deploy</name>
                </property>
            </activation>
            <modules>
                <module>openapi-generator-for-spring-test</module>
            </modules>
        </profile>

        <profile>
            <id>deploy</id>
            <activation>
                <property>
                    <name>deploy</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <!-- The Base URL of Nexus instance where we want to stage -->
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <!-- The server "id" element from settings to use authentication from,
                                 see build.yml -> "server-id" from actions/setup-java@v1 -->
                            <serverId>ossrh</serverId>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                            <autoDropAfterRelease>true</autoDropAfterRelease>
                        </configuration>
                    </plugin>

                    <!-- Create sources JAR -->
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Create JavaDoc JAR -->
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <!-- See https://maven.apache.org/plugins/maven-javadoc-plugin/examples/tag-configuration.html -->
                            <tags>
                                <!-- Register @implNote -->
                                <tag>
                                    <name>implNote</name>
                                    <!-- All -->
                                    <placement>a</placement>
                                    <head>Implementation note:</head>
                                </tag>
                            </tags>
                            <quiet>true</quiet>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Sign artifacts -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!--
                                    Prevent gpg from using pinentry programs.
                                    See https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#extra-setup-for-pomxml
                                    Fixes: gpg: signing failed: Inappropriate ioctl for device
                                    -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>

</project>
